/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

/** The response from a successful Elevation Points request. */
export interface PointsResult {
  /**
   * The response for point/points elevation API. The result will be in same sequence of points listed in request.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly data?: PointElevationResult[];
}

/** The elevation data. */
export interface PointElevationResult {
  /** A location represented as a latitude and longitude. */
  coordinate?: CoordinatesPair;
  /**
   * The elevation value in meters.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly elevationInMeter?: number;
}

/** A location represented as a latitude and longitude. */
export interface CoordinatesPair {
  /** Latitude property */
  latitude?: number;
  /** Longitude property */
  longitude?: number;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: any;
}

/** A location represented as a latitude and longitude using short names 'lat' & 'lon'. */
export interface CoordinatesPairAbbreviated {
  /** Latitude property */
  lat?: number;
  /** Longitude property */
  lon?: number;
}

/** The response from a successful Elevation Polyline request. */
export interface LinesResult {
  /**
   * The response from the Get Data for Polyline API. The results will be listed in the direction from the first endpoint towards the last endpoint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly data?: PointElevationResult[];
}

/** The response from a successful Get Data for Bounding Box API. */
export interface BoundingBoxResult {
  /**
   * The response from the Get Data for Bounding Box API. The results are ordered starting with the southwest corner, and then proceed west to east and south to north.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly data?: PointElevationResult[];
}

/** Known values of {@link Geography} that the service accepts. */
export const enum KnownGeography {
  Us = "us",
  Eu = "eu"
}

/**
 * Defines values for Geography. \
 * {@link KnownGeography} can be used interchangeably with Geography,
 *  this enum contains the known values that the service supports.
 * ### Know values supported by the service
 * **us** \
 * **eu**
 */
export type Geography = string;

/** Known values of {@link ResponseFormat} that the service accepts. */
export const enum KnownResponseFormat {
  /** [The JavaScript Object Notation Data Interchange Format](https://tools.ietf.org/html/rfc8259) */
  Json = "json"
}

/**
 * Defines values for ResponseFormat. \
 * {@link KnownResponseFormat} can be used interchangeably with ResponseFormat,
 *  this enum contains the known values that the service supports.
 * ### Know values supported by the service
 * **json**: [The JavaScript Object Notation Data Interchange Format](https:\/\/tools.ietf.org\/html\/rfc8259)
 */
export type ResponseFormat = string;

/** Known values of {@link GeographicResourceLocation} that the service accepts. */
export const enum KnownGeographicResourceLocation {
  /** Used to access an Azure Maps Creator resource in the United States */
  Us = "us",
  /** Used to access an Azure Maps Creator resource in Europe */
  Eu = "eu"
}

/**
 * Defines values for GeographicResourceLocation. \
 * {@link KnownGeographicResourceLocation} can be used interchangeably with GeographicResourceLocation,
 *  this enum contains the known values that the service supports.
 * ### Know values supported by the service
 * **us**: Used to access an Azure Maps Creator resource in the United States \
 * **eu**: Used to access an Azure Maps Creator resource in Europe
 */
export type GeographicResourceLocation = string;

/** Optional parameters. */
export interface ElevationGetDataForPointsOptionalParams
  extends coreHttp.OperationOptions {}

/** Contains response data for the getDataForPoints operation. */
export type ElevationGetDataForPointsResponse = PointsResult & {
  /** The underlying HTTP response. */
  _response: coreHttp.HttpResponse & {
    /** The response body as text (string format) */
    bodyAsText: string;

    /** The response body as parsed JSON or XML */
    parsedBody: PointsResult;
  };
};

/** Optional parameters. */
export interface ElevationPostDataForPointsOptionalParams
  extends coreHttp.OperationOptions {}

/** Contains response data for the postDataForPoints operation. */
export type ElevationPostDataForPointsResponse = PointsResult & {
  /** The underlying HTTP response. */
  _response: coreHttp.HttpResponse & {
    /** The response body as text (string format) */
    bodyAsText: string;

    /** The response body as parsed JSON or XML */
    parsedBody: PointsResult;
  };
};

/** Optional parameters. */
export interface ElevationGetDataForPolylineOptionalParams
  extends coreHttp.OperationOptions {
  /** The samples parameter specifies the number of equally spaced points at which elevation values  should be provided along a polyline path. The number of samples should range from 2 to 2,000. Default value is 10. */
  samples?: number;
}

/** Contains response data for the getDataForPolyline operation. */
export type ElevationGetDataForPolylineResponse = LinesResult & {
  /** The underlying HTTP response. */
  _response: coreHttp.HttpResponse & {
    /** The response body as text (string format) */
    bodyAsText: string;

    /** The response body as parsed JSON or XML */
    parsedBody: LinesResult;
  };
};

/** Optional parameters. */
export interface ElevationPostDataForPolylineOptionalParams
  extends coreHttp.OperationOptions {
  /** The samples parameter specifies the number of equally spaced points at which elevation values  should be provided along a polyline path. The number of samples should range from 2 to 2,000. Default value is 10. */
  samples?: number;
}

/** Contains response data for the postDataForPolyline operation. */
export type ElevationPostDataForPolylineResponse = LinesResult & {
  /** The underlying HTTP response. */
  _response: coreHttp.HttpResponse & {
    /** The response body as text (string format) */
    bodyAsText: string;

    /** The response body as parsed JSON or XML */
    parsedBody: LinesResult;
  };
};

/** Optional parameters. */
export interface ElevationGetDataForBoundingBoxOptionalParams
  extends coreHttp.OperationOptions {}

/** Contains response data for the getDataForBoundingBox operation. */
export type ElevationGetDataForBoundingBoxResponse = BoundingBoxResult & {
  /** The underlying HTTP response. */
  _response: coreHttp.HttpResponse & {
    /** The response body as text (string format) */
    bodyAsText: string;

    /** The response body as parsed JSON or XML */
    parsedBody: BoundingBoxResult;
  };
};

/** Optional parameters. */
export interface ElevationClientOptionalParams
  extends coreHttp.ServiceClientOptions {
  /** This parameter specifies where the Azure Maps Creator resource is located.  Valid values are us and eu. */
  geography?: Geography;
  /** Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance. */
  xMsClientId?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
